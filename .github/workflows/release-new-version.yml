name: Release New Version
run-name: New release for "${{ github.ref_name }}" triggered by ${{ github.actor }}
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - workflows
  workflow_call:
    inputs:
      version:
        required: true
        type: string

env:
  ECR_REPOSITORY: 'filplus-registry'

jobs:
  format_and_lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '16.14.2'

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier
        run: npm run prettier

  build_and_push:
    runs-on: ubuntu-latest
    needs: format_and_lint
    strategy:
      matrix:
        build-type: [production, staging]
        include:
          - build-type: production
            tag_suffix: prod
            environment: production-fidl

          - build-type: staging
            tag_suffix: stg
            environment: staging-fidl

    continue-on-error: false
    environment: ${{ matrix.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-build-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
          registry-type: public

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
            suffix=-${{ matrix.tag_suffix }}
          images: public.ecr.aws/f4h6r4m9/${{ env.ECR_REPOSITORY }}
          tags: |
            type=semver,pattern={{version}},value=v${{ inputs.version }},enable=${{inputs.version != ''}}
            type=raw,value={{branch}},enable=${{inputs.version != ''}}
            type=ref,event=pr,pattern={{branch}}

      - name: Build tag
        uses: docker/build-push-action@v6
        env:
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_DMOB_API_KEY: ${{ vars.NEXT_PUBLIC_DMOB_API_KEY }}
          NEXT_PUBLIC_MODE: ${{ vars.NEXT_PUBLIC_MODE }}
          NEXT_PUBLIC_NODE_ADDRESS: ${{ vars.NEXT_PUBLIC_NODE_ADDRESS }}
          NEXT_PUBLIC_NODE_TOKEN: ${{ vars.NEXT_PUBLIC_NODE_TOKEN }}
          NEXT_PUBLIC_DMOB_API_URL: ${{ vars.NEXT_PUBLIC_DMOB_API_URL }}
          NEXT_PUBLIC_GLIF_URL: ${{ vars.NEXT_PUBLIC_GLIF_URL }}
          NEXTAUTH_URL: ${{ vars.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          GITHUB_ID: ${{ secrets.GH_ID }}
          GITHUB_SECRET: ${{ secrets.GH_SECRET }}
        with:
          context: .
          push: false
          tags: workflow-test-tag
          cache-from: type=gha
          cache-to: type=gha,mode=max
          github-token: ${{ secrets.GITHUB_TOKEN }}
          outputs: type=cacheonly
